name: Deploy to Production

on:
  push:
    branches: [ "main" ]
    # Ensure CI workflows have passed
    # You can also restrict to tags if you want to deploy only tagged versions
    # tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Comment out the needs to simplify first deployment
    # needs: [backend-ci, frontend-ci]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./webImage
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:buildcache,mode=max
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:buildcache,mode=max
    
    # Deployment options - Uncomment and customize based on your infrastructure
    
    # Option 1: Deploy via SSH to a server
    # - name: Deploy to server via SSH
    #   uses: appleboy/ssh-action@v0.1.10
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: ${{ secrets.SSH_PORT }}
    #     script: |
    #       cd /path/to/deployment
    #       docker-compose pull
    #       docker-compose up -d
    
    # Option 2: Deploy to Kubernetes
    # - name: Set up kubeconfig
    #   uses: azure/k8s-set-context@v1
    #   with:
    #     kubeconfig: ${{ secrets.KUBE_CONFIG }}
    # 
    # - name: Deploy to Kubernetes
    #   run: |
    #     # Update image versions in deployment files
    #     sed -i 's|image: .*pixoria-backend:.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:${{ github.sha }}|' k8s/backend-deployment.yaml
    #     sed -i 's|image: .*pixoria-frontend:.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:${{ github.sha }}|' k8s/frontend-deployment.yaml
    #     
    #     # Apply Kubernetes manifests
    #     kubectl apply -f k8s/