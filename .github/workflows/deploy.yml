name: Deploy to Production

on:
  push:
    branches: [ "main" ]
    # You can also restrict to tags if you want to deploy only tagged versions
    # tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./webImage
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:${{ github.sha }}
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:${{ github.sha }}
    
    # Uncommment and customize one of these deployment options based on your infrastructure
    
    # Option 1: Deploy via SSH to a VPS/custom server
    # - name: Deploy to server via SSH
    #   uses: appleboy/ssh-action@v0.1.10
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: ${{ secrets.SSH_PORT }}
    #     script: |
    #       cd /path/to/deployment
    #       docker-compose pull
    #       docker-compose up -d
    
    # Option 2: Deploy to a cloud platform like DigitalOcean App Platform
    # - name: Install doctl
    #   uses: digitalocean/action-doctl@v2
    #   with:
    #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    # - name: Update deployment
    #   run: doctl apps update ${{ secrets.DO_APP_ID }} --spec .do/app.yaml