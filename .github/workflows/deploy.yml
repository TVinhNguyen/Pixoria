name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./webImage
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-backend:buildcache,mode=max
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pixoria-frontend:buildcache,mode=max
    
    # Deploy to EC2
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USERNAME }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        script: |
          # Tạo thư mục cho dự án nếu chưa tồn tại
          mkdir -p ~/pixoria
          cd ~/pixoria
          
          # Sao chép file docker-compose.production.yml từ repo
          curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.production.yml
          
          # Tạo thư mục nginx và file cấu hình
          mkdir -p ~/pixoria/nginx
          curl -o ~/pixoria/nginx/nginx.conf https://raw.githubusercontent.com/${{ github.repository }}/main/nginx/nginx.conf
          
          # Thiết lập biến môi trường
          export DOCKER_USERNAME="${{ secrets.DOCKER_HUB_USERNAME }}"
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          export DOMAIN_OR_IP="${{ secrets.DOMAIN_OR_IP }}"
          
          # Biến môi trường AWS S3
          export AWS_USE_S3="${{ secrets.AWS_USE_S3 }}"
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_STORAGE_BUCKET_NAME="${{ secrets.AWS_STORAGE_BUCKET_NAME }}"
          export AWS_S3_REGION_NAME="${{ secrets.AWS_S3_REGION_NAME }}"
          
          # Tạo swap file nếu chưa có (cần thiết cho t2.micro với CLIP model)
          if [ ! -f /swapfile ]; then
            sudo dd if=/dev/zero of=/swapfile bs=128M count=16
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab
          fi
          
          # Tạo thư mục cho media và static
          mkdir -p ~/pixoria/mediafiles ~/pixoria/staticfiles ~/pixoria/clip_cache
          
          # Pull images mới nhất và khởi động containers
          docker-compose pull
          docker-compose up -d
          
          # Đảm bảo quyền cho các thư mục
          sudo chown -R $USER:$USER ~/pixoria/mediafiles
          sudo chown -R $USER:$USER ~/pixoria/staticfiles
          sudo chown -R $USER:$USER ~/pixoria/clip_cache
          
          # Kiểm tra trạng thái
          docker-compose ps